// Code generated by protoc-gen-go.
// source: connector.proto
// DO NOT EDIT!

/*
Package connector is a generated protocol buffer package.

It is generated from these files:
	connector.proto

It has these top-level messages:
	HandShankReq
	HandShankRet
	HeartBeatReq
	HeartBeatRet
*/
package connector

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HandShankReq struct {
	Json string `protobuf:"bytes,1,opt,name=json" json:"json,omitempty"`
}

func (m *HandShankReq) Reset()                    { *m = HandShankReq{} }
func (m *HandShankReq) String() string            { return proto.CompactTextString(m) }
func (*HandShankReq) ProtoMessage()               {}
func (*HandShankReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type HandShankRet struct {
	Json string `protobuf:"bytes,1,opt,name=json" json:"json,omitempty"`
}

func (m *HandShankRet) Reset()                    { *m = HandShankRet{} }
func (m *HandShankRet) String() string            { return proto.CompactTextString(m) }
func (*HandShankRet) ProtoMessage()               {}
func (*HandShankRet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// The request message containing the user's name.
type HeartBeatReq struct {
	Json string `protobuf:"bytes,1,opt,name=json" json:"json,omitempty"`
}

func (m *HeartBeatReq) Reset()                    { *m = HeartBeatReq{} }
func (m *HeartBeatReq) String() string            { return proto.CompactTextString(m) }
func (*HeartBeatReq) ProtoMessage()               {}
func (*HeartBeatReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// The response message containing the greetings
type HeartBeatRet struct {
	Json string `protobuf:"bytes,1,opt,name=json" json:"json,omitempty"`
}

func (m *HeartBeatRet) Reset()                    { *m = HeartBeatRet{} }
func (m *HeartBeatRet) String() string            { return proto.CompactTextString(m) }
func (*HeartBeatRet) ProtoMessage()               {}
func (*HeartBeatRet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*HandShankReq)(nil), "connector.HandShankReq")
	proto.RegisterType((*HandShankRet)(nil), "connector.HandShankRet")
	proto.RegisterType((*HeartBeatReq)(nil), "connector.HeartBeatReq")
	proto.RegisterType((*HeartBeatRet)(nil), "connector.HeartBeatRet")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Master service

type MasterClient interface {
	// Sends a greeting
	HeartBeat(ctx context.Context, in *HeartBeatReq, opts ...grpc.CallOption) (*HeartBeatRet, error)
	HandShank(ctx context.Context, in *HandShankReq, opts ...grpc.CallOption) (*HeartBeatRet, error)
}

type masterClient struct {
	cc *grpc.ClientConn
}

func NewMasterClient(cc *grpc.ClientConn) MasterClient {
	return &masterClient{cc}
}

func (c *masterClient) HeartBeat(ctx context.Context, in *HeartBeatReq, opts ...grpc.CallOption) (*HeartBeatRet, error) {
	out := new(HeartBeatRet)
	err := grpc.Invoke(ctx, "/connector.Master/HeartBeat", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) HandShank(ctx context.Context, in *HandShankReq, opts ...grpc.CallOption) (*HeartBeatRet, error) {
	out := new(HeartBeatRet)
	err := grpc.Invoke(ctx, "/connector.Master/HandShank", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Master service

type MasterServer interface {
	// Sends a greeting
	HeartBeat(context.Context, *HeartBeatReq) (*HeartBeatRet, error)
	HandShank(context.Context, *HandShankReq) (*HeartBeatRet, error)
}

func RegisterMasterServer(s *grpc.Server, srv MasterServer) {
	s.RegisterService(&_Master_serviceDesc, srv)
}

func _Master_HeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartBeatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).HeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connector.Master/HeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).HeartBeat(ctx, req.(*HeartBeatReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_HandShank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandShankReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).HandShank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/connector.Master/HandShank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).HandShank(ctx, req.(*HandShankReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Master_serviceDesc = grpc.ServiceDesc{
	ServiceName: "connector.Master",
	HandlerType: (*MasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HeartBeat",
			Handler:    _Master_HeartBeat_Handler,
		},
		{
			MethodName: "HandShank",
			Handler:    _Master_HandShank_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("connector.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xce, 0xcf, 0xcb,
	0x4b, 0x4d, 0x2e, 0xc9, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0x29, 0x71, 0xf1, 0x78, 0x24, 0xe6, 0xa5, 0x04, 0x67, 0x24, 0xe6, 0x65, 0x07, 0xa5, 0x16, 0x0a,
	0x09, 0x71, 0xb1, 0x64, 0x15, 0xe7, 0xe7, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9,
	0x68, 0x6a, 0x4a, 0x70, 0xaa, 0x49, 0x4d, 0x2c, 0x2a, 0x71, 0x4a, 0x4d, 0x2c, 0xc1, 0x67, 0x0e,
	0x42, 0x0d, 0x56, 0x73, 0x8c, 0xba, 0x18, 0xb9, 0xd8, 0x7c, 0x13, 0x8b, 0x4b, 0x52, 0x8b, 0x84,
	0xec, 0xb9, 0x38, 0xe1, 0xca, 0x85, 0xc4, 0xf5, 0x10, 0x9e, 0x40, 0xb6, 0x48, 0x0a, 0x87, 0x44,
	0x89, 0x12, 0x03, 0xd8, 0x00, 0x98, 0xbb, 0x51, 0x0d, 0x40, 0xf2, 0x31, 0x1e, 0x03, 0x9c, 0x0c,
	0xb8, 0xa4, 0x33, 0xf3, 0xf5, 0xd2, 0x8b, 0x0a, 0x92, 0xf5, 0x52, 0x2b, 0x12, 0x73, 0x0b, 0x72,
	0x52, 0x8b, 0xf5, 0x32, 0x52, 0x73, 0x72, 0xf2, 0xcb, 0xf3, 0x8b, 0x72, 0x52, 0x9c, 0xf8, 0x3d,
	0x40, 0xec, 0x70, 0x10, 0x3b, 0x00, 0x14, 0xae, 0x01, 0x8c, 0x49, 0x6c, 0xe0, 0x00, 0x36, 0x06,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x8e, 0xda, 0xd9, 0x3d, 0x73, 0x01, 0x00, 0x00,
}
